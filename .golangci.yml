version: "2"
run:
  tests: true
  allow-parallel-runners: true
  allow-serial-runners: true
linters:
  default: none
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - copyloopvar
    - decorder
    - dupl
    - errcheck
    - funlen
    - gocritic
    - gocyclo
    - goheader
    - gomodguard
    - goprintffuncname
    - gosec
    - govet
    - grouper
    - importas
    - ineffassign
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - predeclared
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - wastedassign
    - whitespace
  settings:
    funlen:
      lines: 100
      statements: 50
    gocritic:
      disabled-checks:
        - paramTypeCombine
        - commentedOutCode
        - ifElseChain
        - commentFormatting
        - dupImport
        - unnamedResult
        - octalLiteral
        - whyNoLint
        - wrapperFunc
        - importShadow
        - sloppyReassign
      enabled-tags:
        - diagnostic
        - style
        - opinionated
    gocyclo:
      min-complexity: 20
    govet:
      enable:
        - shadow
    misspell:
      locale: US
    nolintlint:
      allow-unused: false
    revive:
      rules:
        - name: var-declaration
          disabled: true
          exclude:
            - ""
    staticcheck:
      checks:
        - all
      initialisms:
        - ACL
        - API
        - ASCII
        - CPU
        - CSS
        - DNS
        - EOF
        - GUID
        - HTML
        - HTTP
        - HTTPS
        - ID
        - IP
        - JSON
        - QPS
        - RAM
        - RPC
        - SLA
        - SMTP
        - SQL
        - SSH
        - TCP
        - TLS
        - TTL
        - UDP
        - UI
        - GID
        - UID
        - UUID
        - URI
        - URL
        - UTF8
        - VM
        - XML
        - XMPP
        - XSRF
        - XSS
        - SIP
        - RTP
        - AMQP
        - DB
        - TS
  exclusions:
    rules:
      - linters:
          - bodyclose
          - errcheck
          - funlen
          - gosec
          - mnd
          - noctx
        path: (_test\.go|example_test\.go|example_[0-9A-Za-z_-]+_test\.go)
      - linters:
          - gocritic
        path: (_test\.go|example_test\.go|example_[0-9A-Za-z_-]+_test\.go)
        text: 'unnecessaryBlock: block doesn''t have definitions, can be simply deleted'
      - linters:
          - bodyclose
          - errcheck
          - funlen
          - gocritic
          - gosec
          - mnd
          - noctx
        path: packages/isc/coreutil/packages/isc/coreutil/generated_entrypoints.go
      - path: (.+)\.go$
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
      - path: (.+)\.go$
        text: 'err113: do not define dynamic errors, use wrapped static errors instead:'
      - path: (.+)\.go$
        text: type name will be used as [0-9A-Za-z_.]+ by other packages, and that stutters; consider calling this
      - path: (.+)\.go$
        text: Potential file inclusion via variable
      - path: (.+)\.go$
        text: 'G404: Use of weak random number generator'
      - path: (.+)\.go$
        text: Subprocess launch(ed with variable|ing should be audited)
      - path: (.+)\.go$
        text: Use of unsafe calls should be audited
      - path: (.+)\.go$
        text: 'G108: Profiling endpoint is automatically exposed on /debug/pprof'
      - path: (.+)\.go$
        text: (Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)
      - path: (.+)\.go$
        text: 'G101: Potential hardcoded credentials'
      - path: (.+)\.go$
        text: (G104|G307)
      - path: (.+)\.go$
        text: '`[0-9A-Za-z_.]+` - `[0-9A-Za-z_.]+` always receives `[0-9A-Za-z_.]+`'
      - path: (.+)\.go$
        text: should have comment .*or be unexported
      - path: (.+)\.go$
        text: 'exported: comment on exported'
      - path: (.+)\.go$
        text: package-comments
      - path: (.+)\.go$
        text: blank-imports
      - path: (.+)\.go$
        text: 'var-naming: don''t use leading k in Go names;'
      - path: (.+)\.go$
        text: 'var-naming: don''t use an underscore in package name'
      - path: (.+)\.go$
        text: 'if-return: redundant if ...; err != nil check, just return error instead.'
      - path: (.+)\.go$
        text: 'unused-parameter: parameter'
      - path: (.+)\.go$
        text: Error return value of `e.Encode` is not checked
      - path: (.+)\.go$
        text: may want to add detail/ assignee to this TODO/ FIXME/ BUG comment
      - path: 'packages/evm/jsonrpc/service.go'
        text: 'ST1003: method ChainId should be ChainID'  # casing required for evm
      - path: (.+)\.go$
        text: "consider `optionalAgentID' to be of non-pointer type"
      - path: "packages/nodeconn/chain.go"
        text: "Non-inherited new context, use function like `context.WithXXX` instead"
      - linters:
          - misspell
        text: "`Finalise` is a misspelling of `Finalize`"
    paths:
      - contracts/wasm
      - tools/cluster
      - documentation
      - packages/isc/coreutil
      - clients/iota-go
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new-from-rev: ""
formatters:
  enable:
    - gofmt
    - gofumpt
  exclusions:
    paths:
      - contracts/wasm
      - tools/cluster
      - documentation
      - packages/isc/coreutil
      - clients/iota-go
      - third_party$
      - builtin$
      - examples$
