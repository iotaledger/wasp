/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the RotateChainRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RotateChainRequest{}

// RotateChainRequest struct for RotateChainRequest
type RotateChainRequest struct {
	// The address of the new committee or empty to cancel attempt to rotate
	RotateToAddress *string `json:"rotateToAddress,omitempty"`
}

// NewRotateChainRequest instantiates a new RotateChainRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRotateChainRequest() *RotateChainRequest {
	this := RotateChainRequest{}
	return &this
}

// NewRotateChainRequestWithDefaults instantiates a new RotateChainRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRotateChainRequestWithDefaults() *RotateChainRequest {
	this := RotateChainRequest{}
	return &this
}

// GetRotateToAddress returns the RotateToAddress field value if set, zero value otherwise.
func (o *RotateChainRequest) GetRotateToAddress() string {
	if o == nil || IsNil(o.RotateToAddress) {
		var ret string
		return ret
	}
	return *o.RotateToAddress
}

// GetRotateToAddressOk returns a tuple with the RotateToAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotateChainRequest) GetRotateToAddressOk() (*string, bool) {
	if o == nil || IsNil(o.RotateToAddress) {
		return nil, false
	}
	return o.RotateToAddress, true
}

// HasRotateToAddress returns a boolean if a field has been set.
func (o *RotateChainRequest) HasRotateToAddress() bool {
	if o != nil && !IsNil(o.RotateToAddress) {
		return true
	}

	return false
}

// SetRotateToAddress gets a reference to the given string and assigns it to the RotateToAddress field.
func (o *RotateChainRequest) SetRotateToAddress(v string) {
	o.RotateToAddress = &v
}

func (o RotateChainRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RotateChainRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RotateToAddress) {
		toSerialize["rotateToAddress"] = o.RotateToAddress
	}
	return toSerialize, nil
}

type NullableRotateChainRequest struct {
	value *RotateChainRequest
	isSet bool
}

func (v NullableRotateChainRequest) Get() *RotateChainRequest {
	return v.value
}

func (v *NullableRotateChainRequest) Set(val *RotateChainRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRotateChainRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRotateChainRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRotateChainRequest(val *RotateChainRequest) *NullableRotateChainRequest {
	return &NullableRotateChainRequest{value: val, isSet: true}
}

func (v NullableRotateChainRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRotateChainRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


