/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProtocolParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtocolParameters{}

// ProtocolParameters struct for ProtocolParameters
type ProtocolParameters struct {
	// The protocol's current epoch
	Epoch int64 `json:"epoch"`
	// The current epoch's duration in ms
	EpochDurationMs int64 `json:"epoch_duration_ms"`
	// The current epoch's start_timestamp in ms
	EpochStartTimestampMs int64 `json:"epoch_start_timestamp_ms"`
	// The iota's total_supply
	IotaTotalSupply int64 `json:"iota_total_supply"`
	// The protocol's version
	ProtocolVersion int64 `json:"protocol_version"`
	// The current reference_gas_price
	ReferenceGasPrice int64 `json:"reference_gas_price"`
	// The protocol's system_state_version
	SystemStateVersion int64 `json:"system_state_version"`
}

type _ProtocolParameters ProtocolParameters

// NewProtocolParameters instantiates a new ProtocolParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtocolParameters(epoch int64, epochDurationMs int64, epochStartTimestampMs int64, iotaTotalSupply int64, protocolVersion int64, referenceGasPrice int64, systemStateVersion int64) *ProtocolParameters {
	this := ProtocolParameters{}
	this.Epoch = epoch
	this.EpochDurationMs = epochDurationMs
	this.EpochStartTimestampMs = epochStartTimestampMs
	this.IotaTotalSupply = iotaTotalSupply
	this.ProtocolVersion = protocolVersion
	this.ReferenceGasPrice = referenceGasPrice
	this.SystemStateVersion = systemStateVersion
	return &this
}

// NewProtocolParametersWithDefaults instantiates a new ProtocolParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtocolParametersWithDefaults() *ProtocolParameters {
	this := ProtocolParameters{}
	return &this
}

// GetEpoch returns the Epoch field value
func (o *ProtocolParameters) GetEpoch() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Epoch
}

// GetEpochOk returns a tuple with the Epoch field value
// and a boolean to check if the value has been set.
func (o *ProtocolParameters) GetEpochOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Epoch, true
}

// SetEpoch sets field value
func (o *ProtocolParameters) SetEpoch(v int64) {
	o.Epoch = v
}

// GetEpochDurationMs returns the EpochDurationMs field value
func (o *ProtocolParameters) GetEpochDurationMs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EpochDurationMs
}

// GetEpochDurationMsOk returns a tuple with the EpochDurationMs field value
// and a boolean to check if the value has been set.
func (o *ProtocolParameters) GetEpochDurationMsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EpochDurationMs, true
}

// SetEpochDurationMs sets field value
func (o *ProtocolParameters) SetEpochDurationMs(v int64) {
	o.EpochDurationMs = v
}

// GetEpochStartTimestampMs returns the EpochStartTimestampMs field value
func (o *ProtocolParameters) GetEpochStartTimestampMs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EpochStartTimestampMs
}

// GetEpochStartTimestampMsOk returns a tuple with the EpochStartTimestampMs field value
// and a boolean to check if the value has been set.
func (o *ProtocolParameters) GetEpochStartTimestampMsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EpochStartTimestampMs, true
}

// SetEpochStartTimestampMs sets field value
func (o *ProtocolParameters) SetEpochStartTimestampMs(v int64) {
	o.EpochStartTimestampMs = v
}

// GetIotaTotalSupply returns the IotaTotalSupply field value
func (o *ProtocolParameters) GetIotaTotalSupply() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IotaTotalSupply
}

// GetIotaTotalSupplyOk returns a tuple with the IotaTotalSupply field value
// and a boolean to check if the value has been set.
func (o *ProtocolParameters) GetIotaTotalSupplyOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IotaTotalSupply, true
}

// SetIotaTotalSupply sets field value
func (o *ProtocolParameters) SetIotaTotalSupply(v int64) {
	o.IotaTotalSupply = v
}

// GetProtocolVersion returns the ProtocolVersion field value
func (o *ProtocolParameters) GetProtocolVersion() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProtocolVersion
}

// GetProtocolVersionOk returns a tuple with the ProtocolVersion field value
// and a boolean to check if the value has been set.
func (o *ProtocolParameters) GetProtocolVersionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtocolVersion, true
}

// SetProtocolVersion sets field value
func (o *ProtocolParameters) SetProtocolVersion(v int64) {
	o.ProtocolVersion = v
}

// GetReferenceGasPrice returns the ReferenceGasPrice field value
func (o *ProtocolParameters) GetReferenceGasPrice() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ReferenceGasPrice
}

// GetReferenceGasPriceOk returns a tuple with the ReferenceGasPrice field value
// and a boolean to check if the value has been set.
func (o *ProtocolParameters) GetReferenceGasPriceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceGasPrice, true
}

// SetReferenceGasPrice sets field value
func (o *ProtocolParameters) SetReferenceGasPrice(v int64) {
	o.ReferenceGasPrice = v
}

// GetSystemStateVersion returns the SystemStateVersion field value
func (o *ProtocolParameters) GetSystemStateVersion() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SystemStateVersion
}

// GetSystemStateVersionOk returns a tuple with the SystemStateVersion field value
// and a boolean to check if the value has been set.
func (o *ProtocolParameters) GetSystemStateVersionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemStateVersion, true
}

// SetSystemStateVersion sets field value
func (o *ProtocolParameters) SetSystemStateVersion(v int64) {
	o.SystemStateVersion = v
}

func (o ProtocolParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtocolParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["epoch"] = o.Epoch
	toSerialize["epoch_duration_ms"] = o.EpochDurationMs
	toSerialize["epoch_start_timestamp_ms"] = o.EpochStartTimestampMs
	toSerialize["iota_total_supply"] = o.IotaTotalSupply
	toSerialize["protocol_version"] = o.ProtocolVersion
	toSerialize["reference_gas_price"] = o.ReferenceGasPrice
	toSerialize["system_state_version"] = o.SystemStateVersion
	return toSerialize, nil
}

func (o *ProtocolParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"epoch",
		"epoch_duration_ms",
		"epoch_start_timestamp_ms",
		"iota_total_supply",
		"protocol_version",
		"reference_gas_price",
		"system_state_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProtocolParameters := _ProtocolParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProtocolParameters)

	if err != nil {
		return err
	}

	*o = ProtocolParameters(varProtocolParameters)

	return err
}

type NullableProtocolParameters struct {
	value *ProtocolParameters
	isSet bool
}

func (v NullableProtocolParameters) Get() *ProtocolParameters {
	return v.value
}

func (v *NullableProtocolParameters) Set(val *ProtocolParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableProtocolParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableProtocolParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtocolParameters(val *ProtocolParameters) *NullableProtocolParameters {
	return &NullableProtocolParameters{value: val, isSet: true}
}

func (v NullableProtocolParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtocolParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


