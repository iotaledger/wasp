/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EstimateGasRequestOnledger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EstimateGasRequestOnledger{}

// EstimateGasRequestOnledger struct for EstimateGasRequestOnledger
type EstimateGasRequestOnledger struct {
	// Hexadecimal bytes of transaction to estimate
	TransactionBytes string `json:"transactionBytes"`
}

type _EstimateGasRequestOnledger EstimateGasRequestOnledger

// NewEstimateGasRequestOnledger instantiates a new EstimateGasRequestOnledger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimateGasRequestOnledger(transactionBytes string) *EstimateGasRequestOnledger {
	this := EstimateGasRequestOnledger{}
	this.TransactionBytes = transactionBytes
	return &this
}

// NewEstimateGasRequestOnledgerWithDefaults instantiates a new EstimateGasRequestOnledger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimateGasRequestOnledgerWithDefaults() *EstimateGasRequestOnledger {
	this := EstimateGasRequestOnledger{}
	return &this
}

// GetTransactionBytes returns the TransactionBytes field value
func (o *EstimateGasRequestOnledger) GetTransactionBytes() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionBytes
}

// GetTransactionBytesOk returns a tuple with the TransactionBytes field value
// and a boolean to check if the value has been set.
func (o *EstimateGasRequestOnledger) GetTransactionBytesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionBytes, true
}

// SetTransactionBytes sets field value
func (o *EstimateGasRequestOnledger) SetTransactionBytes(v string) {
	o.TransactionBytes = v
}

func (o EstimateGasRequestOnledger) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EstimateGasRequestOnledger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transactionBytes"] = o.TransactionBytes
	return toSerialize, nil
}

func (o *EstimateGasRequestOnledger) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"transactionBytes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEstimateGasRequestOnledger := _EstimateGasRequestOnledger{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEstimateGasRequestOnledger)

	if err != nil {
		return err
	}

	*o = EstimateGasRequestOnledger(varEstimateGasRequestOnledger)

	return err
}

type NullableEstimateGasRequestOnledger struct {
	value *EstimateGasRequestOnledger
	isSet bool
}

func (v NullableEstimateGasRequestOnledger) Get() *EstimateGasRequestOnledger {
	return v.value
}

func (v *NullableEstimateGasRequestOnledger) Set(val *EstimateGasRequestOnledger) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimateGasRequestOnledger) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimateGasRequestOnledger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimateGasRequestOnledger(val *EstimateGasRequestOnledger) *NullableEstimateGasRequestOnledger {
	return &NullableEstimateGasRequestOnledger{value: val, isSet: true}
}

func (v NullableEstimateGasRequestOnledger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimateGasRequestOnledger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


