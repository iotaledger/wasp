/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AnchorMetricItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnchorMetricItem{}

// AnchorMetricItem struct for AnchorMetricItem
type AnchorMetricItem struct {
	LastMessage StateAnchor `json:"lastMessage"`
	Messages uint32 `json:"messages"`
	Timestamp time.Time `json:"timestamp"`
}

type _AnchorMetricItem AnchorMetricItem

// NewAnchorMetricItem instantiates a new AnchorMetricItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnchorMetricItem(lastMessage StateAnchor, messages uint32, timestamp time.Time) *AnchorMetricItem {
	this := AnchorMetricItem{}
	this.LastMessage = lastMessage
	this.Messages = messages
	this.Timestamp = timestamp
	return &this
}

// NewAnchorMetricItemWithDefaults instantiates a new AnchorMetricItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnchorMetricItemWithDefaults() *AnchorMetricItem {
	this := AnchorMetricItem{}
	return &this
}

// GetLastMessage returns the LastMessage field value
func (o *AnchorMetricItem) GetLastMessage() StateAnchor {
	if o == nil {
		var ret StateAnchor
		return ret
	}

	return o.LastMessage
}

// GetLastMessageOk returns a tuple with the LastMessage field value
// and a boolean to check if the value has been set.
func (o *AnchorMetricItem) GetLastMessageOk() (*StateAnchor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastMessage, true
}

// SetLastMessage sets field value
func (o *AnchorMetricItem) SetLastMessage(v StateAnchor) {
	o.LastMessage = v
}

// GetMessages returns the Messages field value
func (o *AnchorMetricItem) GetMessages() uint32 {
	if o == nil {
		var ret uint32
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *AnchorMetricItem) GetMessagesOk() (*uint32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Messages, true
}

// SetMessages sets field value
func (o *AnchorMetricItem) SetMessages(v uint32) {
	o.Messages = v
}

// GetTimestamp returns the Timestamp field value
func (o *AnchorMetricItem) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *AnchorMetricItem) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *AnchorMetricItem) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

func (o AnchorMetricItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnchorMetricItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lastMessage"] = o.LastMessage
	toSerialize["messages"] = o.Messages
	toSerialize["timestamp"] = o.Timestamp
	return toSerialize, nil
}

func (o *AnchorMetricItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lastMessage",
		"messages",
		"timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAnchorMetricItem := _AnchorMetricItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAnchorMetricItem)

	if err != nil {
		return err
	}

	*o = AnchorMetricItem(varAnchorMetricItem)

	return err
}

type NullableAnchorMetricItem struct {
	value *AnchorMetricItem
	isSet bool
}

func (v NullableAnchorMetricItem) Get() *AnchorMetricItem {
	return v.value
}

func (v *NullableAnchorMetricItem) Set(val *AnchorMetricItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAnchorMetricItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAnchorMetricItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnchorMetricItem(val *AnchorMetricItem) *NullableAnchorMetricItem {
	return &NullableAnchorMetricItem{value: val, isSet: true}
}

func (v NullableAnchorMetricItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnchorMetricItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


