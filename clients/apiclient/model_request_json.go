/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RequestJSON type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestJSON{}

// RequestJSON struct for RequestJSON
type RequestJSON struct {
	Allowance AssetsJSON `json:"allowance"`
	Assets AssetsJSON `json:"assets"`
	CallTarget CallTargetJSON `json:"callTarget"`
	// The gas budget (uint64 as string)
	GasBudget string `json:"gasBudget"`
	IsEVM bool `json:"isEVM"`
	IsOffLedger bool `json:"isOffLedger"`
	Params []string `json:"params"`
	RequestId string `json:"requestId"`
	SenderAccount string `json:"senderAccount"`
}

type _RequestJSON RequestJSON

// NewRequestJSON instantiates a new RequestJSON object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestJSON(allowance AssetsJSON, assets AssetsJSON, callTarget CallTargetJSON, gasBudget string, isEVM bool, isOffLedger bool, params []string, requestId string, senderAccount string) *RequestJSON {
	this := RequestJSON{}
	this.Allowance = allowance
	this.Assets = assets
	this.CallTarget = callTarget
	this.GasBudget = gasBudget
	this.IsEVM = isEVM
	this.IsOffLedger = isOffLedger
	this.Params = params
	this.RequestId = requestId
	this.SenderAccount = senderAccount
	return &this
}

// NewRequestJSONWithDefaults instantiates a new RequestJSON object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestJSONWithDefaults() *RequestJSON {
	this := RequestJSON{}
	return &this
}

// GetAllowance returns the Allowance field value
func (o *RequestJSON) GetAllowance() AssetsJSON {
	if o == nil {
		var ret AssetsJSON
		return ret
	}

	return o.Allowance
}

// GetAllowanceOk returns a tuple with the Allowance field value
// and a boolean to check if the value has been set.
func (o *RequestJSON) GetAllowanceOk() (*AssetsJSON, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Allowance, true
}

// SetAllowance sets field value
func (o *RequestJSON) SetAllowance(v AssetsJSON) {
	o.Allowance = v
}

// GetAssets returns the Assets field value
func (o *RequestJSON) GetAssets() AssetsJSON {
	if o == nil {
		var ret AssetsJSON
		return ret
	}

	return o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value
// and a boolean to check if the value has been set.
func (o *RequestJSON) GetAssetsOk() (*AssetsJSON, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assets, true
}

// SetAssets sets field value
func (o *RequestJSON) SetAssets(v AssetsJSON) {
	o.Assets = v
}

// GetCallTarget returns the CallTarget field value
func (o *RequestJSON) GetCallTarget() CallTargetJSON {
	if o == nil {
		var ret CallTargetJSON
		return ret
	}

	return o.CallTarget
}

// GetCallTargetOk returns a tuple with the CallTarget field value
// and a boolean to check if the value has been set.
func (o *RequestJSON) GetCallTargetOk() (*CallTargetJSON, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallTarget, true
}

// SetCallTarget sets field value
func (o *RequestJSON) SetCallTarget(v CallTargetJSON) {
	o.CallTarget = v
}

// GetGasBudget returns the GasBudget field value
func (o *RequestJSON) GetGasBudget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasBudget
}

// GetGasBudgetOk returns a tuple with the GasBudget field value
// and a boolean to check if the value has been set.
func (o *RequestJSON) GetGasBudgetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasBudget, true
}

// SetGasBudget sets field value
func (o *RequestJSON) SetGasBudget(v string) {
	o.GasBudget = v
}

// GetIsEVM returns the IsEVM field value
func (o *RequestJSON) GetIsEVM() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEVM
}

// GetIsEVMOk returns a tuple with the IsEVM field value
// and a boolean to check if the value has been set.
func (o *RequestJSON) GetIsEVMOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEVM, true
}

// SetIsEVM sets field value
func (o *RequestJSON) SetIsEVM(v bool) {
	o.IsEVM = v
}

// GetIsOffLedger returns the IsOffLedger field value
func (o *RequestJSON) GetIsOffLedger() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOffLedger
}

// GetIsOffLedgerOk returns a tuple with the IsOffLedger field value
// and a boolean to check if the value has been set.
func (o *RequestJSON) GetIsOffLedgerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOffLedger, true
}

// SetIsOffLedger sets field value
func (o *RequestJSON) SetIsOffLedger(v bool) {
	o.IsOffLedger = v
}

// GetParams returns the Params field value
func (o *RequestJSON) GetParams() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *RequestJSON) GetParamsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Params, true
}

// SetParams sets field value
func (o *RequestJSON) SetParams(v []string) {
	o.Params = v
}

// GetRequestId returns the RequestId field value
func (o *RequestJSON) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *RequestJSON) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *RequestJSON) SetRequestId(v string) {
	o.RequestId = v
}

// GetSenderAccount returns the SenderAccount field value
func (o *RequestJSON) GetSenderAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SenderAccount
}

// GetSenderAccountOk returns a tuple with the SenderAccount field value
// and a boolean to check if the value has been set.
func (o *RequestJSON) GetSenderAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderAccount, true
}

// SetSenderAccount sets field value
func (o *RequestJSON) SetSenderAccount(v string) {
	o.SenderAccount = v
}

func (o RequestJSON) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestJSON) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allowance"] = o.Allowance
	toSerialize["assets"] = o.Assets
	toSerialize["callTarget"] = o.CallTarget
	toSerialize["gasBudget"] = o.GasBudget
	toSerialize["isEVM"] = o.IsEVM
	toSerialize["isOffLedger"] = o.IsOffLedger
	toSerialize["params"] = o.Params
	toSerialize["requestId"] = o.RequestId
	toSerialize["senderAccount"] = o.SenderAccount
	return toSerialize, nil
}

func (o *RequestJSON) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allowance",
		"assets",
		"callTarget",
		"gasBudget",
		"isEVM",
		"isOffLedger",
		"params",
		"requestId",
		"senderAccount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestJSON := _RequestJSON{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRequestJSON)

	if err != nil {
		return err
	}

	*o = RequestJSON(varRequestJSON)

	return err
}

type NullableRequestJSON struct {
	value *RequestJSON
	isSet bool
}

func (v NullableRequestJSON) Get() *RequestJSON {
	return v.value
}

func (v *NullableRequestJSON) Set(val *RequestJSON) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestJSON) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestJSON) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestJSON(val *RequestJSON) *NullableRequestJSON {
	return &NullableRequestJSON{value: val, isSet: true}
}

func (v NullableRequestJSON) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestJSON) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


