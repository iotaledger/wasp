// Copyright (c) 2025 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: event.proto

package iotaconn_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *EventFilter           `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventStreamRequest) Reset() {
	*x = EventStreamRequest{}
	mi := &file_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamRequest) ProtoMessage() {}

func (x *EventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStreamRequest.ProtoReflect.Descriptor instead.
func (*EventStreamRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventStreamRequest) GetFilter() *EventFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventData     []byte                 `protobuf:"bytes,1,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
	EventId       *EventID               `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TimestampMs   *uint64                `protobuf:"varint,3,opt,name=timestamp_ms,json=timestampMs,proto3,oneof" json:"timestamp_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetEventData() []byte {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *Event) GetEventId() *EventID {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *Event) GetTimestampMs() uint64 {
	if x != nil && x.TimestampMs != nil {
		return *x.TimestampMs
	}
	return 0
}

type EventID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxSeq         uint64                 `protobuf:"varint,1,opt,name=tx_seq,json=txSeq,proto3" json:"tx_seq,omitempty"`
	EventSeq      uint64                 `protobuf:"varint,2,opt,name=event_seq,json=eventSeq,proto3" json:"event_seq,omitempty"`
	TxDigest      string                 `protobuf:"bytes,3,opt,name=tx_digest,json=txDigest,proto3" json:"tx_digest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventID) Reset() {
	*x = EventID{}
	mi := &file_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventID) ProtoMessage() {}

func (x *EventID) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventID.ProtoReflect.Descriptor instead.
func (*EventID) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventID) GetTxSeq() uint64 {
	if x != nil {
		return x.TxSeq
	}
	return 0
}

func (x *EventID) GetEventSeq() uint64 {
	if x != nil {
		return x.EventSeq
	}
	return 0
}

func (x *EventID) GetTxDigest() string {
	if x != nil {
		return x.TxDigest
	}
	return ""
}

// WASP-specific event filter for ISC package events
type EventFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ISC package ID (hex string)
	IscPackageId string `protobuf:"bytes,1,opt,name=isc_package_id,json=iscPackageId,proto3" json:"isc_package_id,omitempty"`
	// Move module name (e.g., "request")
	Module string `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	// Event name (e.g., "RequestEvent")
	EventName string `protobuf:"bytes,3,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	// JSON path for the field to filter on (e.g., RequestEventAnchorFieldName)
	Path string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// Value to match in the specified path (e.g., anchor ID)
	Value         string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventFilter) Reset() {
	*x = EventFilter{}
	mi := &file_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFilter) ProtoMessage() {}

func (x *EventFilter) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFilter.ProtoReflect.Descriptor instead.
func (*EventFilter) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{3}
}

func (x *EventFilter) GetIscPackageId() string {
	if x != nil {
		return x.IscPackageId
	}
	return ""
}

func (x *EventFilter) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *EventFilter) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *EventFilter) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *EventFilter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_event_proto protoreflect.FileDescriptor

const file_event_proto_rawDesc = "" +
	"\n" +
	"\vevent.proto\x12\x10iota.grpc.events\"K\n" +
	"\x12EventStreamRequest\x125\n" +
	"\x06filter\x18\x01 \x01(\v2\x1d.iota.grpc.events.EventFilterR\x06filter\"\x95\x01\n" +
	"\x05Event\x12\x1d\n" +
	"\n" +
	"event_data\x18\x01 \x01(\fR\teventData\x124\n" +
	"\bevent_id\x18\x02 \x01(\v2\x19.iota.grpc.events.EventIDR\aeventId\x12&\n" +
	"\ftimestamp_ms\x18\x03 \x01(\x04H\x00R\vtimestampMs\x88\x01\x01B\x0f\n" +
	"\r_timestamp_ms\"Z\n" +
	"\aEventID\x12\x15\n" +
	"\x06tx_seq\x18\x01 \x01(\x04R\x05txSeq\x12\x1b\n" +
	"\tevent_seq\x18\x02 \x01(\x04R\beventSeq\x12\x1b\n" +
	"\ttx_digest\x18\x03 \x01(\tR\btxDigest\"\x94\x01\n" +
	"\vEventFilter\x12$\n" +
	"\x0eisc_package_id\x18\x01 \x01(\tR\fiscPackageId\x12\x16\n" +
	"\x06module\x18\x02 \x01(\tR\x06module\x12\x1d\n" +
	"\n" +
	"event_name\x18\x03 \x01(\tR\teventName\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12\x14\n" +
	"\x05value\x18\x05 \x01(\tR\x05value2_\n" +
	"\fEventService\x12O\n" +
	"\fStreamEvents\x12$.iota.grpc.events.EventStreamRequest\x1a\x17.iota.grpc.events.Event0\x01B:Z8github.com/iotaledger/wasp/clients/iota-go/iotaconn_grpcb\x06proto3"

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData []byte
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)))
	})
	return file_event_proto_rawDescData
}

var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_event_proto_goTypes = []any{
	(*EventStreamRequest)(nil), // 0: iota.grpc.events.EventStreamRequest
	(*Event)(nil),              // 1: iota.grpc.events.Event
	(*EventID)(nil),            // 2: iota.grpc.events.EventID
	(*EventFilter)(nil),        // 3: iota.grpc.events.EventFilter
}
var file_event_proto_depIdxs = []int32{
	3, // 0: iota.grpc.events.EventStreamRequest.filter:type_name -> iota.grpc.events.EventFilter
	2, // 1: iota.grpc.events.Event.event_id:type_name -> iota.grpc.events.EventID
	0, // 2: iota.grpc.events.EventService.StreamEvents:input_type -> iota.grpc.events.EventStreamRequest
	1, // 3: iota.grpc.events.EventService.StreamEvents:output_type -> iota.grpc.events.Event
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	file_event_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}
