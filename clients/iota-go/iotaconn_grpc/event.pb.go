// Copyright (c) 2025 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: event.proto

package iotaconn_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *EventFilter           `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventStreamRequest) Reset() {
	*x = EventStreamRequest{}
	mi := &file_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamRequest) ProtoMessage() {}

func (x *EventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStreamRequest.ProtoReflect.Descriptor instead.
func (*EventStreamRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventStreamRequest) GetFilter() *EventFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type Event struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	EventId           *EventID               `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	PackageId         *Address               `protobuf:"bytes,2,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	TransactionModule string                 `protobuf:"bytes,3,opt,name=transaction_module,json=transactionModule,proto3" json:"transaction_module,omitempty"`
	Sender            *Address               `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	TypeName          string                 `protobuf:"bytes,5,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	ParsedJson        string                 `protobuf:"bytes,6,opt,name=parsed_json,json=parsedJson,proto3" json:"parsed_json,omitempty"`
	TimestampMs       *uint64                `protobuf:"varint,7,opt,name=timestamp_ms,json=timestampMs,proto3,oneof" json:"timestamp_ms,omitempty"`
	EventData         *BcsData               `protobuf:"bytes,8,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetEventId() *EventID {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *Event) GetPackageId() *Address {
	if x != nil {
		return x.PackageId
	}
	return nil
}

func (x *Event) GetTransactionModule() string {
	if x != nil {
		return x.TransactionModule
	}
	return ""
}

func (x *Event) GetSender() *Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Event) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Event) GetParsedJson() string {
	if x != nil {
		return x.ParsedJson
	}
	return ""
}

func (x *Event) GetTimestampMs() uint64 {
	if x != nil && x.TimestampMs != nil {
		return *x.TimestampMs
	}
	return 0
}

func (x *Event) GetEventData() *BcsData {
	if x != nil {
		return x.EventData
	}
	return nil
}

type EventID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventSeq      uint64                 `protobuf:"varint,1,opt,name=event_seq,json=eventSeq,proto3" json:"event_seq,omitempty"`
	TxDigest      *TransactionDigest     `protobuf:"bytes,2,opt,name=tx_digest,json=txDigest,proto3" json:"tx_digest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventID) Reset() {
	*x = EventID{}
	mi := &file_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventID) ProtoMessage() {}

func (x *EventID) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventID.ProtoReflect.Descriptor instead.
func (*EventID) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventID) GetEventSeq() uint64 {
	if x != nil {
		return x.EventSeq
	}
	return 0
}

func (x *EventID) GetTxDigest() *TransactionDigest {
	if x != nil {
		return x.TxDigest
	}
	return nil
}

// Rich event filter that supports gRPC event filtering
type EventFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Filter:
	//
	//	*EventFilter_All
	//	*EventFilter_Sender
	//	*EventFilter_Transaction
	//	*EventFilter_MoveModule
	//	*EventFilter_MoveEventType
	//	*EventFilter_MoveEventModule
	//	*EventFilter_TimeRange
	Filter        isEventFilter_Filter `protobuf_oneof:"filter"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventFilter) Reset() {
	*x = EventFilter{}
	mi := &file_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFilter) ProtoMessage() {}

func (x *EventFilter) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFilter.ProtoReflect.Descriptor instead.
func (*EventFilter) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{3}
}

func (x *EventFilter) GetFilter() isEventFilter_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *EventFilter) GetAll() *AllFilter {
	if x != nil {
		if x, ok := x.Filter.(*EventFilter_All); ok {
			return x.All
		}
	}
	return nil
}

func (x *EventFilter) GetSender() *SenderFilter {
	if x != nil {
		if x, ok := x.Filter.(*EventFilter_Sender); ok {
			return x.Sender
		}
	}
	return nil
}

func (x *EventFilter) GetTransaction() *TransactionFilter {
	if x != nil {
		if x, ok := x.Filter.(*EventFilter_Transaction); ok {
			return x.Transaction
		}
	}
	return nil
}

func (x *EventFilter) GetMoveModule() *MoveModuleFilter {
	if x != nil {
		if x, ok := x.Filter.(*EventFilter_MoveModule); ok {
			return x.MoveModule
		}
	}
	return nil
}

func (x *EventFilter) GetMoveEventType() *MoveEventTypeFilter {
	if x != nil {
		if x, ok := x.Filter.(*EventFilter_MoveEventType); ok {
			return x.MoveEventType
		}
	}
	return nil
}

func (x *EventFilter) GetMoveEventModule() *MoveEventModuleFilter {
	if x != nil {
		if x, ok := x.Filter.(*EventFilter_MoveEventModule); ok {
			return x.MoveEventModule
		}
	}
	return nil
}

func (x *EventFilter) GetTimeRange() *TimeRangeFilter {
	if x != nil {
		if x, ok := x.Filter.(*EventFilter_TimeRange); ok {
			return x.TimeRange
		}
	}
	return nil
}

type isEventFilter_Filter interface {
	isEventFilter_Filter()
}

type EventFilter_All struct {
	All *AllFilter `protobuf:"bytes,1,opt,name=all,proto3,oneof"`
}

type EventFilter_Sender struct {
	Sender *SenderFilter `protobuf:"bytes,2,opt,name=sender,proto3,oneof"`
}

type EventFilter_Transaction struct {
	Transaction *TransactionFilter `protobuf:"bytes,3,opt,name=transaction,proto3,oneof"`
}

type EventFilter_MoveModule struct {
	MoveModule *MoveModuleFilter `protobuf:"bytes,4,opt,name=move_module,json=moveModule,proto3,oneof"`
}

type EventFilter_MoveEventType struct {
	MoveEventType *MoveEventTypeFilter `protobuf:"bytes,5,opt,name=move_event_type,json=moveEventType,proto3,oneof"`
}

type EventFilter_MoveEventModule struct {
	MoveEventModule *MoveEventModuleFilter `protobuf:"bytes,6,opt,name=move_event_module,json=moveEventModule,proto3,oneof"`
}

type EventFilter_TimeRange struct {
	TimeRange *TimeRangeFilter `protobuf:"bytes,7,opt,name=time_range,json=timeRange,proto3,oneof"`
}

func (*EventFilter_All) isEventFilter_Filter() {}

func (*EventFilter_Sender) isEventFilter_Filter() {}

func (*EventFilter_Transaction) isEventFilter_Filter() {}

func (*EventFilter_MoveModule) isEventFilter_Filter() {}

func (*EventFilter_MoveEventType) isEventFilter_Filter() {}

func (*EventFilter_MoveEventModule) isEventFilter_Filter() {}

func (*EventFilter_TimeRange) isEventFilter_Filter() {}

// Match all events (catch-all filter)
type AllFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllFilter) Reset() {
	*x = AllFilter{}
	mi := &file_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFilter) ProtoMessage() {}

func (x *AllFilter) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFilter.ProtoReflect.Descriptor instead.
func (*AllFilter) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{4}
}

// Filter by sender address
type SenderFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Address               `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"` // Sender address
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SenderFilter) Reset() {
	*x = SenderFilter{}
	mi := &file_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SenderFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderFilter) ProtoMessage() {}

func (x *SenderFilter) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderFilter.ProtoReflect.Descriptor instead.
func (*SenderFilter) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{5}
}

func (x *SenderFilter) GetSender() *Address {
	if x != nil {
		return x.Sender
	}
	return nil
}

// Filter by transaction digest
type TransactionFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxDigest      *TransactionDigest     `protobuf:"bytes,1,opt,name=tx_digest,json=txDigest,proto3" json:"tx_digest,omitempty"` // Transaction digest
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionFilter) Reset() {
	*x = TransactionFilter{}
	mi := &file_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionFilter) ProtoMessage() {}

func (x *TransactionFilter) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionFilter.ProtoReflect.Descriptor instead.
func (*TransactionFilter) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionFilter) GetTxDigest() *TransactionDigest {
	if x != nil {
		return x.TxDigest
	}
	return nil
}

// Filter by transaction execution module (different from event definition module)
type MoveModuleFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PackageId     *Address               `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"` // Package ID
	Module        string                 `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`                        // Module name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveModuleFilter) Reset() {
	*x = MoveModuleFilter{}
	mi := &file_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveModuleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveModuleFilter) ProtoMessage() {}

func (x *MoveModuleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveModuleFilter.ProtoReflect.Descriptor instead.
func (*MoveModuleFilter) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{7}
}

func (x *MoveModuleFilter) GetPackageId() *Address {
	if x != nil {
		return x.PackageId
	}
	return nil
}

func (x *MoveModuleFilter) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

// Filter by Move event type (package::module::event_name)
type MoveEventTypeFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PackageId     *Address               `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"` // Package ID
	Module        string                 `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`                        // Module name (e.g., "request")
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                            // Event name (e.g., "RequestEvent")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveEventTypeFilter) Reset() {
	*x = MoveEventTypeFilter{}
	mi := &file_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveEventTypeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveEventTypeFilter) ProtoMessage() {}

func (x *MoveEventTypeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveEventTypeFilter.ProtoReflect.Descriptor instead.
func (*MoveEventTypeFilter) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{8}
}

func (x *MoveEventTypeFilter) GetPackageId() *Address {
	if x != nil {
		return x.PackageId
	}
	return nil
}

func (x *MoveEventTypeFilter) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *MoveEventTypeFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Filter by package and module
type MoveEventModuleFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PackageId     *Address               `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"` // Package ID
	Module        string                 `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`                        // Module name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveEventModuleFilter) Reset() {
	*x = MoveEventModuleFilter{}
	mi := &file_event_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveEventModuleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveEventModuleFilter) ProtoMessage() {}

func (x *MoveEventModuleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveEventModuleFilter.ProtoReflect.Descriptor instead.
func (*MoveEventModuleFilter) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{9}
}

func (x *MoveEventModuleFilter) GetPackageId() *Address {
	if x != nil {
		return x.PackageId
	}
	return nil
}

func (x *MoveEventModuleFilter) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

// Filter by timestamp range
type TimeRangeFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     uint64                 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Start time in milliseconds since epoch (inclusive)
	EndTime       uint64                 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // End time in milliseconds since epoch (exclusive)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeRangeFilter) Reset() {
	*x = TimeRangeFilter{}
	mi := &file_event_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRangeFilter) ProtoMessage() {}

func (x *TimeRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRangeFilter.ProtoReflect.Descriptor instead.
func (*TimeRangeFilter) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{10}
}

func (x *TimeRangeFilter) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TimeRangeFilter) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

var File_event_proto protoreflect.FileDescriptor

const file_event_proto_rawDesc = "" +
	"\n" +
	"\vevent.proto\x12\x10iota.grpc.events\x1a\fcommon.proto\"K\n" +
	"\x12EventStreamRequest\x125\n" +
	"\x06filter\x18\x01 \x01(\v2\x1d.iota.grpc.events.EventFilterR\x06filter\"\x8a\x03\n" +
	"\x05Event\x124\n" +
	"\bevent_id\x18\x01 \x01(\v2\x19.iota.grpc.events.EventIDR\aeventId\x128\n" +
	"\n" +
	"package_id\x18\x02 \x01(\v2\x19.iota.grpc.common.AddressR\tpackageId\x12-\n" +
	"\x12transaction_module\x18\x03 \x01(\tR\x11transactionModule\x121\n" +
	"\x06sender\x18\x04 \x01(\v2\x19.iota.grpc.common.AddressR\x06sender\x12\x1b\n" +
	"\ttype_name\x18\x05 \x01(\tR\btypeName\x12\x1f\n" +
	"\vparsed_json\x18\x06 \x01(\tR\n" +
	"parsedJson\x12&\n" +
	"\ftimestamp_ms\x18\a \x01(\x04H\x00R\vtimestampMs\x88\x01\x01\x128\n" +
	"\n" +
	"event_data\x18\b \x01(\v2\x19.iota.grpc.common.BcsDataR\teventDataB\x0f\n" +
	"\r_timestamp_ms\"h\n" +
	"\aEventID\x12\x1b\n" +
	"\tevent_seq\x18\x01 \x01(\x04R\beventSeq\x12@\n" +
	"\ttx_digest\x18\x02 \x01(\v2#.iota.grpc.common.TransactionDigestR\btxDigest\"\xfe\x03\n" +
	"\vEventFilter\x12/\n" +
	"\x03all\x18\x01 \x01(\v2\x1b.iota.grpc.events.AllFilterH\x00R\x03all\x128\n" +
	"\x06sender\x18\x02 \x01(\v2\x1e.iota.grpc.events.SenderFilterH\x00R\x06sender\x12G\n" +
	"\vtransaction\x18\x03 \x01(\v2#.iota.grpc.events.TransactionFilterH\x00R\vtransaction\x12E\n" +
	"\vmove_module\x18\x04 \x01(\v2\".iota.grpc.events.MoveModuleFilterH\x00R\n" +
	"moveModule\x12O\n" +
	"\x0fmove_event_type\x18\x05 \x01(\v2%.iota.grpc.events.MoveEventTypeFilterH\x00R\rmoveEventType\x12U\n" +
	"\x11move_event_module\x18\x06 \x01(\v2'.iota.grpc.events.MoveEventModuleFilterH\x00R\x0fmoveEventModule\x12B\n" +
	"\n" +
	"time_range\x18\a \x01(\v2!.iota.grpc.events.TimeRangeFilterH\x00R\ttimeRangeB\b\n" +
	"\x06filter\"\v\n" +
	"\tAllFilter\"A\n" +
	"\fSenderFilter\x121\n" +
	"\x06sender\x18\x01 \x01(\v2\x19.iota.grpc.common.AddressR\x06sender\"U\n" +
	"\x11TransactionFilter\x12@\n" +
	"\ttx_digest\x18\x01 \x01(\v2#.iota.grpc.common.TransactionDigestR\btxDigest\"d\n" +
	"\x10MoveModuleFilter\x128\n" +
	"\n" +
	"package_id\x18\x01 \x01(\v2\x19.iota.grpc.common.AddressR\tpackageId\x12\x16\n" +
	"\x06module\x18\x02 \x01(\tR\x06module\"{\n" +
	"\x13MoveEventTypeFilter\x128\n" +
	"\n" +
	"package_id\x18\x01 \x01(\v2\x19.iota.grpc.common.AddressR\tpackageId\x12\x16\n" +
	"\x06module\x18\x02 \x01(\tR\x06module\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"i\n" +
	"\x15MoveEventModuleFilter\x128\n" +
	"\n" +
	"package_id\x18\x01 \x01(\v2\x19.iota.grpc.common.AddressR\tpackageId\x12\x16\n" +
	"\x06module\x18\x02 \x01(\tR\x06module\"K\n" +
	"\x0fTimeRangeFilter\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x04R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x04R\aendTime2_\n" +
	"\fEventService\x12O\n" +
	"\fStreamEvents\x12$.iota.grpc.events.EventStreamRequest\x1a\x17.iota.grpc.events.Event0\x01B=Z;github.com/iotaledger/wasp/v2/clients/iota-go/iotaconn_grpcb\x06proto3"

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData []byte
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)))
	})
	return file_event_proto_rawDescData
}

var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_event_proto_goTypes = []any{
	(*EventStreamRequest)(nil),    // 0: iota.grpc.events.EventStreamRequest
	(*Event)(nil),                 // 1: iota.grpc.events.Event
	(*EventID)(nil),               // 2: iota.grpc.events.EventID
	(*EventFilter)(nil),           // 3: iota.grpc.events.EventFilter
	(*AllFilter)(nil),             // 4: iota.grpc.events.AllFilter
	(*SenderFilter)(nil),          // 5: iota.grpc.events.SenderFilter
	(*TransactionFilter)(nil),     // 6: iota.grpc.events.TransactionFilter
	(*MoveModuleFilter)(nil),      // 7: iota.grpc.events.MoveModuleFilter
	(*MoveEventTypeFilter)(nil),   // 8: iota.grpc.events.MoveEventTypeFilter
	(*MoveEventModuleFilter)(nil), // 9: iota.grpc.events.MoveEventModuleFilter
	(*TimeRangeFilter)(nil),       // 10: iota.grpc.events.TimeRangeFilter
	(*Address)(nil),               // 11: iota.grpc.common.Address
	(*BcsData)(nil),               // 12: iota.grpc.common.BcsData
	(*TransactionDigest)(nil),     // 13: iota.grpc.common.TransactionDigest
}
var file_event_proto_depIdxs = []int32{
	3,  // 0: iota.grpc.events.EventStreamRequest.filter:type_name -> iota.grpc.events.EventFilter
	2,  // 1: iota.grpc.events.Event.event_id:type_name -> iota.grpc.events.EventID
	11, // 2: iota.grpc.events.Event.package_id:type_name -> iota.grpc.common.Address
	11, // 3: iota.grpc.events.Event.sender:type_name -> iota.grpc.common.Address
	12, // 4: iota.grpc.events.Event.event_data:type_name -> iota.grpc.common.BcsData
	13, // 5: iota.grpc.events.EventID.tx_digest:type_name -> iota.grpc.common.TransactionDigest
	4,  // 6: iota.grpc.events.EventFilter.all:type_name -> iota.grpc.events.AllFilter
	5,  // 7: iota.grpc.events.EventFilter.sender:type_name -> iota.grpc.events.SenderFilter
	6,  // 8: iota.grpc.events.EventFilter.transaction:type_name -> iota.grpc.events.TransactionFilter
	7,  // 9: iota.grpc.events.EventFilter.move_module:type_name -> iota.grpc.events.MoveModuleFilter
	8,  // 10: iota.grpc.events.EventFilter.move_event_type:type_name -> iota.grpc.events.MoveEventTypeFilter
	9,  // 11: iota.grpc.events.EventFilter.move_event_module:type_name -> iota.grpc.events.MoveEventModuleFilter
	10, // 12: iota.grpc.events.EventFilter.time_range:type_name -> iota.grpc.events.TimeRangeFilter
	11, // 13: iota.grpc.events.SenderFilter.sender:type_name -> iota.grpc.common.Address
	13, // 14: iota.grpc.events.TransactionFilter.tx_digest:type_name -> iota.grpc.common.TransactionDigest
	11, // 15: iota.grpc.events.MoveModuleFilter.package_id:type_name -> iota.grpc.common.Address
	11, // 16: iota.grpc.events.MoveEventTypeFilter.package_id:type_name -> iota.grpc.common.Address
	11, // 17: iota.grpc.events.MoveEventModuleFilter.package_id:type_name -> iota.grpc.common.Address
	0,  // 18: iota.grpc.events.EventService.StreamEvents:input_type -> iota.grpc.events.EventStreamRequest
	1,  // 19: iota.grpc.events.EventService.StreamEvents:output_type -> iota.grpc.events.Event
	19, // [19:20] is the sub-list for method output_type
	18, // [18:19] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	file_common_proto_init()
	file_event_proto_msgTypes[1].OneofWrappers = []any{}
	file_event_proto_msgTypes[3].OneofWrappers = []any{
		(*EventFilter_All)(nil),
		(*EventFilter_Sender)(nil),
		(*EventFilter_Transaction)(nil),
		(*EventFilter_MoveModule)(nil),
		(*EventFilter_MoveEventType)(nil),
		(*EventFilter_MoveEventModule)(nil),
		(*EventFilter_TimeRange)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}
